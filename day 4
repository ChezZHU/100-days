traffic_signal = 'green'

if traffic_signal == 'red':
    print('Stop the vehicle.')
    print('Have a good day!')
  
  
traffic_signal = 'green'

if traffic_signal == 'red':
    print('Stop the vehicle.')
print('Have a good day!')

# 检查学生是否通过考试。
# 我们假设通过的成绩是 50 或以上。
student_grade = int(input('输入成绩: '))

if student_grade >= 50: # 如果成绩大于等于 50
    print('祝贺!')
    print('你通过了.')

if student_grade < 50: # 如果成绩小于 50
    print('很抱歉!')
    print('你没有通过考试.')
    
# 检查学生是否通过考试。
# 我们假设通过的成绩是 50 或以上。
student_grade = int(input('输入成绩: '))

if student_grade >= 50: # 如果成绩大于等于 50
    print('祝贺!')
    print('你通过了.')
else:
    print('很抱歉!')
    print('你没有通过考试.')

country = input('Enter country: ')

if country == 'france' or country == 'France':
    print('Bonjour')
else:
    print('Hello')
    

age = 20

if age >= 18:
    print('You can vote.')
else:
    print('You cannot vote')
    
# 下面为错误范例：
if age >= 18:
    print('你可以投票')
print('这儿发生了错误')
else:
    print('你不可以投票')
# 上面代码中，print('这儿发生了错误') 将导致错误。 它不在 if 子句中，也不在 else 子句中。
## 不能在if和else之间放其他代码

# 上面代码中，如果 country 等于 'france' 或 'France'， bonjour 将被打印。 否则， Hello 将被打印。

# 我们已经看到了，if 语句带有 else 子句允许我们在两个不同的选项之间做出选择。 如果我们需要在多个选项之间做出选择，我们可以添加 elif (读作 else if) 子句。

# 语法如下：
if boolean_expression1:
    if_body
elif boolean expression2:
    elif_body
else:
    else_body
    
# 工作方式如下：

# 如果 boolean_expression1 为 True，则执行 if 的主体。
# 如果 boolean_expression2 为 True, elif 的主体将被执行。
# 如果所有的条件都为 False，则执行 else 的主体。


# 之前学生分数题的补充
student_grade = int(input('输入分数: '))

if student_grade > 100 or student_grade < 0:
    print('不合法的分数.')
elif student_grade >= 50:
    print('你通过了.')
else:  
    print('你失败了.')
    
# 请在 ___ 划线处，替换成你的代码

# 获取输入正数 
number = int(input())

# 是否为正数或负数或零。
if number > 0:
    print ('正数')
elif number == 0:
    print ('零')
else:
    print('负数')
    
# 这里，我们创建了一个循环，期望在运行固定次数后结束。
# 为了运行循环的固定次数，我们必须在循环内部增加 count，使得 count <= 3 能变成 False。

count = 1

while count <= 3:
    print('I am inside a loop.')
    print('Looping is interesting.')
    
    # 改变变量count
    count = count + 1

# 循环完成后的执行代码
print('OUTSIDE THE LOOP')

#输出
# I am inside a loop.
# Looping is interesting.
# I am inside a loop.
# Looping is interesting.
# I am inside a loop.
# Looping is interesting.
# OUTSIDE THE LOOP


i = 1
n = 6

while i < n:
    print(i)
    i = i + 2  # i 每次迭代+2
